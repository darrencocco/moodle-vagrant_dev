---
- hosts: all
  become_user: root
  become: yes

  pre_tasks:
    - name: define url
      set_fact:
        url: http://{{ servername }}

  tasks:
  - name: Install packages
    dnf:
      name: "{{ item }}"
    with_items:
      - acl
      - nginx
      - postgresql-server
      - postgresql
      - python2-psycopg2
      - php-fpm
      - php-cli
      - php-xml
      - php-xmlrpc
      - php-gd
      - php-pgsql
      - php-intl
      - php-soap
      - php-opcache
      - php-mbstring
      - php-pecl-zip
      - php-pecl-xdebug
      - "@lxde-desktop"
      - tigervnc-server
      - libselinux-python
      - php-simplesamlphp-saml2

  - name: Update packages
    dnf:
      name: "*"
      state: latest

  - name: Disable SELinux
    selinux:
      policy: targeted
      state: permissive

  - name: Disable firewall
    service:
      name: firewalld
      enabled: no
      state: stopped

  - name: Disable xscreensaver
    file:
      path: /etc/xdg/lxsession/LXDE/autostart
      state: absent

  - name: Init database
    command: postgresql-setup --initdb --unit postgresql

  - name: Start database
    service:
      name: postgresql
      enabled: yes
      state: started

  - name: Create database
    become_user: postgres
    postgresql_db:
      name: moodle

  - name: Create database user
    become_user: postgres
    postgresql_user:
      name: apache
      priv: ALL
      db: moodle
      role_attr_flags: LOGIN
  
  - name: Increase NGINX types hash size
    lineinfile:
      path: /etc/nginx/nginx.conf
      regexp: types_hash_max_size 2048;
      line: types_hash_max_size 4096;
      
  - name: Install NGINX site configs
    template:
      src: site.conf.j2
      dest: /etc/nginx/conf.d/{{ item.servername }}.conf
    with_items:
      - { servername: "{{ servername }}", htmldir: '/vagrant/moodle' }
      - { servername: "saml.{{ servername }}", htmldir:  '/srv/simplesamlphp/www' }
      
  - name: Download SimpleSAML PHP
    unarchive:
      src: https://simplesamlphp.org/download?latest
      dest: /srv/
      remote_src: yes
      list_files: yes
    register: archive_contents
    
  - name: Link SimpleSAML PHP directory
    file:
      src: "{{ item.src }}"
      path: "{{ item.path }}"
      state: link
    with_items:
      - { src: "/srv/{{ archive_contents.files[0] }}", path: "/srv/simplesamlphp" }
      - { src: "/srv/{{ archive_contents.files[0] }}/www", path: "/srv/{{ archive_contents.files[0] }}/www/simplesaml" }
      
  - name: Configure SimpleSAML
    lineinfile:
      path: /srv/simplesamlphp/config/config.php
      regexp: "{{ item.find }}"
      line: "{{ item.replace }}"
    with_items:
      - { find: "'auth.adminpassword' => '123'," , replace: "'auth.adminpassword' => 'Passw0rd!'," }
      - { find: "'enable.saml20-idp' => false,", replace: "'enable.saml20-idp' => true," }

  - name: Add SAML metadata sources for SimpleSAML PHP
    lineinfile:
      path: /srv/simplesamlphp/config/config.php
      line: "        array('type' => 'xml', 'url' =>  'http://{{ servername }}/auth/saml2/sp/metadata.php'),"
      insertafter: "^\\s*array\\('type' => 'flatfile'\\),$"
      
  - name: Enable SimpleSAML example authentication
    file:
      path: /srv/simplesamlphp/modules/exampleauthenable
      state: touch
      
  - name: Configure example authentication
    copy:
      src: authsources.php
      dest: /srv/simplesamlphp/config/authsources.php

  - name: Enable Xdebug
    blockinfile:
      path: /etc/php.d/16-xdebug-options.ini
      create: yes
      block: |
        xdebug.collect_assignments = 1
        xdebug.collect_includes = 1
        xdebug.collect_params = 4
        xdebug.collect_return = 1
        xdebug.collect_vars = 1
        xdebug.idekey = vagrant
        xdebug.remote_enable = 1
        xdebug.remote_autostart = 1
        xdebug.remote_connect_back = 1

  - name: Start web server
    service:
      name: nginx
      enabled: yes
      state: started

  - name: Start PHP CGI
    service:
      name: php-fpm
      enabled: yes
      state: restarted

  - name: Create Moodle data dir
    file:
      path: /var/www/moodledata
      state: directory
      owner: apache
      group: apache
      
  - name: Create Behat Moodle data dir
    file:
      path: /var/www/behatdata
      state: directory
      owner: apache
      group: apache

  - name: Install config.php
    template:
      src: config.php.j2
      dest: /vagrant/moodle/config.php
    
