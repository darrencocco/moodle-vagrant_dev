---
- hosts: all
  become_user: root
  become: yes

  pre_tasks:
    - name: define url
      set_fact:
        url: http://{{ servername }}
        behat_url: http://behat.{{ servername }}

  tasks:
  - name: Install packages
    dnf:
      name:
        - acl
        - nginx
        - postgresql-server
        - postgresql
        - python3-psycopg2
        - php-fpm
        - php-cli
        - php-xml
        - php-xmlrpc
        - php-json
        - php-gd
        - php-pgsql
        - php-intl
        - php-soap
        - php-opcache
        - php-mbstring
        - php-pecl-zip
        - php-pecl-xdebug
        - ruby
        - ruby-devel
        - openssl-devel
        - sqlite-devel
        - redhat-rpm-config
        - "@C Development Tools and Libraries"
        - "@lxde-desktop"
        - "@base-x"
        - java-openjdk
        - libselinux-python
        - virtualbox-guest-additions
        - pigz

  - name: Update packages
    dnf:
      name: "*"
      state: latest

  - name: Disable SELinux
    selinux:
      policy: targeted
      state: disabled

  - name: Install config.php
    template:
      src: config.php.j2
      dest: /vagrant/moodle/config.php

  - name: Enable Virtualbox Guest Additions
    service:
      name: vboxservice
      enabled: yes
      state: started

  - name: Disable xscreensaver
    file:
      path: /etc/xdg/lxsession/LXDE/autostart
      state: absent

  - name: Init database
    command: postgresql-setup --initdb --unit postgresql
    args:
      creates: /var/lib/pgsql/data/postgresql.conf

  - name: Configure DataGrip access
    lineinfile:
      path: /var/lib/pgsql/data/postgresql.conf
      insertafter: "#listen_addresses = 'localhost'"
      line: "listen_addresses = '*'"
  - blockinfile:
      path: /var/lib/pgsql/data/pg_hba.conf
      insertafter: 'local\s+all\s+all\s+peer'
      block: |
        # IPv4 connections from host
        host    all             all             10.0.0.0/8              trust
        host    all             all             172.16.0.0/12           trust
        host    all             all             192.168.0.0/16          trust

  - name: Start database
    service:
      name: postgresql
      enabled: yes
      state: started

  - name: Create database
    become_user: postgres
    postgresql_db:
      name: moodle

  - name: Create database user
    become_user: postgres
    postgresql_user:
      name: apache
      priv: ALL
      db: moodle
      role_attr_flags: LOGIN

  - name: Increase NGINX types hash size
    lineinfile:
      path: /etc/nginx/nginx.conf
      regexp: "types_hash_max_size.*;"
      line: "types_hash_max_size 4096;"

  - name: Increase NGINX upload size
    lineinfile:
      path: /etc/nginx/nginx.conf
      line: "client_max_body_size 100M;"
      insertafter: ".*types_hash_max_size.*"

  - name: Install NGINX site configs
    template:
      src: site.conf.j2
      dest: /etc/nginx/conf.d/{{ item.servername }}.conf
    with_items:
      - { servername: "{{ servername }}", htmldir: '/vagrant/moodle' }
      - { servername: "behat.{{ servername }}", htmldir: '/vagrant/moodle' }
      - { servername: "saml.{{ servername }}", htmldir:  '/srv/simplesamlphp/www' }

  - name: Download SimpleSAML PHP
    unarchive:
      src: https://simplesamlphp.org/download?latest
      dest: /srv/
      remote_src: yes
      list_files: yes
    register: archive_contents

  - name: Link SimpleSAML PHP directory
    file:
      src: "{{ item.src }}"
      path: "{{ item.path }}"
      state: link
    with_items:
      - { src: "/srv/{{ archive_contents.files[0] }}", path: "/srv/simplesamlphp" }
      - { src: "/srv/{{ archive_contents.files[0] }}/www", path: "/srv/{{ archive_contents.files[0] }}/www/simplesaml" }

  - name: Configure SimpleSAML
    lineinfile:
      path: /srv/simplesamlphp/config/config.php
      regexp: "{{ item.find }}"
      line: "{{ item.replace }}"
    with_items:
      - { find: "'auth.adminpassword' => '123'," , replace: "'auth.adminpassword' => 'Passw0rd!'," }
      - { find: "'enable.saml20-idp' => false,", replace: "'enable.saml20-idp' => true," }

  - name: Add SAML metadata sources for SimpleSAML PHP
    lineinfile:
      path: /srv/simplesamlphp/config/config.php
      line: "        array('type' => 'xml', 'url' =>  'http://{{ servername }}/auth/saml2/sp/metadata.php'),"
      insertafter: "^\\s*array\\('type' => 'flatfile'\\),$"

  - name: Enable SimpleSAML example authentication
    file:
      path: /srv/simplesamlphp/modules/exampleauth/enable
      state: touch

  - name: Configure example authentication
    copy:
      src: authsources.php
      dest: /srv/simplesamlphp/config/authsources.php

  - name: Generate locally signed SAML cert
    command: openssl req -newkey rsa:2048 -new -x509 -days 3652 -nodes -out server.crt -keyout server.pem -subj "/C=NA/ST=NA/L=NA/O=NA/CN=www.example.com"
    args:
      chdir: /srv/simplesamlphp/cert
      creates: /srv/simplesamlphp/cert/server.crt

  - name: Set ownership of SAML cert to PHP-FPM
    file:
      owner: apache
      path: "{{ item }}"
    with_items:
      - /srv/simplesamlphp/cert/server.crt
      - /srv/simplesamlphp/cert/server.pem

  - name: Enable Xdebug
    blockinfile:
      path: /etc/php.d/16-xdebug-options.ini
      create: yes
      block: |
        xdebug.collect_assignments = 1
        xdebug.collect_includes = 1
        xdebug.collect_params = 4
        xdebug.collect_return = 1
        xdebug.collect_vars = 1
        xdebug.idekey = vagrant
        xdebug.remote_enable = 1
        xdebug.remote_autostart = 1
        xdebug.remote_connect_back = 1

  - name: Start web server
    service:
      name: nginx
      enabled: yes
      state: started

  - name: Start PHP CGI
    service:
      name: php-fpm
      enabled: yes
      state: restarted

  - name: Disable firewall
    service:
      name: firewalld
      enabled: no
      state: stopped

  - name: Create Moodle data dir
    file:
      path: /var/www/moodledata
      state: directory
      owner: apache
      group: apache

  - name: Create Behat Moodle data dir
    file:
      path: /var/www/behatdata
      state: directory
      owner: apache
      group: apache

  - name: Install MailCatcher
    gem:
      name: mailcatcher
      state: latest
      user_install: no

  - name: Install MailCatcher service
    copy:
      src: mailcatcher.service
      dest: /etc/systemd/system/mailcatcher.service
      owner: root
      group: root
      mode:  0755

  - name: Enable MailCatcher service
    service:
      name: mailcatcher
      enabled: yes
      state: started

  - name: Expose MailCatcher web interface
    template:
      src: reverse_proxy.conf.j2
      dest: /etc/nginx/conf.d/{{ item.servername }}.conf
    with_items:
      - { servername: "mail.{{ servername }}", proxy_destination: 'http://127.0.0.1:1080' }
  - service:
      name: nginx
      state: restarted

  - name: Install Firefox 47.0.1
    unarchive:
      src: https://ftp.mozilla.org/pub/firefox/releases/47.0.1/linux-x86_64/en-GB/firefox-47.0.1.tar.bz2
      remote_src: yes
      dest: /opt/

  - name: Add Firefox 47.0.1 to PATH
    file:
      src: /opt/firefox/firefox
      path: /usr/local/sbin/firefox
      state: link

  - name: Install Selenium Server 2.53.1
    get_url:
      url: https://selenium-release.storage.googleapis.com/2.53/selenium-server-standalone-2.53.1.jar
      owner: vagrant
      group: vagrant
      dest: /opt/selenium

  - name: Add apache user to vagrant group
    user:
      name: apache
      groups: vagrant
      append: yes

  - name: Open up vagrant home directory to group
    file:
      path: /home/vagrant
      state: directory
      mode: 0750

  - name: Set group ACL defaults for vagrant home directory
    acl:
      path: /home/vagrant
      default: yes
      etype: group
      permissions: rwx
      state: present

  - name: Create sudo_php script for CLI
    copy:
      src: sudo_php
      dest: /usr/sbin/sudo_php
      owner: root
      group: root
      mode:  0755

  - name: Create archive_moodle script for CLI
    copy:
      src: moodle_archive
      dest: /usr/local/sbin/moodle_archive
      owner: root
      group: root
      mode:  0755